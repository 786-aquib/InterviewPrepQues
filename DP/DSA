/******************************************************************/
[Problem Link:-https://leetcode.com/problems/palindromic-substrings/
Solution:-
class Solution {
public:
    int countSubstrings(string s) {
        int n = s.size();
        int dp[n][n];
        memset(dp, 0, sizeof(dp));
        int count = 0;
        / Palindrome len = 1
        for (int i = 0; i < n; i++) {
            dp[i][i] = 1;
            count++;
        }
        // Palindrome len = 2
        for (int i = 0; i < n - 1; i++) {
            if (s[i] == s[i + 1]) {
                dp[i][i + 1] = 1;
                count++;
            }
        }
        // Palindrome len > 2
        for (int len = 3; len <= n; len++) {
            for (int i = 0; i <= n - len; i++) {
                int j = len + i - 1;
                if (s[i] == s[j] && dp[i + 1][j - 1]) {
                    dp[i][j] = 1;
                    count++;
                }
            }
        }
        return count;
    }
};]