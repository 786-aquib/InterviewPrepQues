/*-------------------------------------------------------------------------------------------*/

[Problem Link:-https://www.geeksforgeeks.org/tiling-problem/
Solution:-
// C++ program to count the
// no. of ways to place 2*1 size
// tiles in 2*n size board.
#include <iostream>
using namespace std;
int getNoOfWays(int n){
	// Base case
	if (n <= 2)
	return n;
	return getNoOfWays(n - 1) + getNoOfWays(n - 2);
}
// Driver Fuction
int main(){
	cout << getNoOfWays(4) << endl;
	cout << getNoOfWays(3);
	return 0;
}]

/*-------------------------------------------------------------------------------------------*/


[problem Link:-https://leetcode.com/problems/domino-and-tromino-tiling/
Solution:-
class Solution {
public:
    long long int numTilings(int n) {
         vector<long long int> dp(1001);
         vector<long long int> dp_up(1001);
         vector<long long int> dp_down(1001);
         dp[1]=1;
         dp_up[1]=0;
         dp_down[1]=0;
         dp[2]=2;
         dp_up[2]=1;
         dp_down[2]=1;
         for(int i=3;i<=n;i++){
             dp_up[i]=(dp[i-2]%1000000007+dp_down[i-1]%1000000007)%1000000007;
             dp_down[i]=(dp[i-2]%1000000007+dp_up[i-1]%1000000007)%1000000007;
             dp[i]=(dp[i-1]%1000000007+dp[i-2]%1000000007+dp_up[i-1]%1000000007+dp_down[i-1]%1000000007)%1000000007;
         }
         return dp[n]%1000000007;
    }
};]



/*----------------------------------------------------------------------------------------*/