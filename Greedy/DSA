[Problem Link:-https://practice.geeksforgeeks.org/problems/minimum-platforms-1587115620/1
Solution:-
class Solution{
    public:
   int findPlatform(int arr[], int dep[], int n){
     // Your code here
     int ans=0;
        sort(arr,arr+n);
        sort(dep,dep+n);
        int j=0;
        for(int i=0;i<n;++i){
            if(arr[i]<=dep[j]){
                ans++;
            }
            else{
                j++;
            }
        }
        return ans;
    }
};]
[Problem Link:-https://www.geeksforgeeks.org/buy-maximum-stocks-stocks-can-bought-th-day/
Solution:-
int buyMaximumProducts(int n, int k, int price[]){
    vector<pair<int, int> > v;
    // Making pair of product cost and number
    // of day..
    for (int i = 0; i < n; ++i)
        v.push_back(make_pair(price[i], i + 1));   
    // Sorting the vector pair.
    sort(v.begin(), v.end());
    // Calculating the maximum number of stock
    // count.
    int ans = 0;
    for (int i = 0; i < n; ++i) {
        ans += min(v[i].second, k / v[i].first);
        k -= v[i].first * min(v[i].second, (k / v[i].first));
    }
    return ans;
}]